#!/bin/bash

notify() {
  osascript <<EOF
              display notification "$2" with title "$1"
EOF
}

[[ $# != 3 ]] && \
  notify "Error" 'bin/make_appcast_item plist dsa_priv_key release_notes_file' \
  && \
    echo '
Usage:

bin/make_appcast_item $plist $dsa_priv_key $release_notes_file
' && \
  exit 1

PLIST=$1
DSA_PRIV_KEY=$2
RELEASE_NOTES_FILE=$3

VERSION=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "${PLIST}")
OLD_VERSION=$(git tag | gsort -V | tail -1)

if [[ $4 != "FORCE" ]]; then
  if [[ "$VERSION" == "$OLD_VERSION" ]]; then
    echo "Already up to date"
    notify "Already up to date" "The published update matches the current CutBox version"
    exit 2
  fi
fi

BUILD_NUMBER=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "${PLIST}")

notify "Preparing Appcast.xml" "Fetching DMG version $VERSION"

wget https://github.com/ocodo/CutBox/releases/download/${VERSION}/CutBox.dmg

notify "Got CutBox.dmg" "$VERSION"

DMG_FILE="./CutBox.dmg"
DMG_LENGTH=$(ls -l "$DMG_FILE" | unexpand | tr -s ' ' | cut -d' ' -f5)
DSA_SIGNATURE=$(sign_update "$DMG_FILE" "$DSA_PRIV_KEY")

rm "$DMG_FILE"

RELEASE_NOTES_HTML="$( cat "${RELEASE_NOTES_FILE}" | cmark | tr -d "\n" )"

DATA="version: $VERSION
build_number: $BUILD_NUMBER
dmg_length: $DMG_LENGTH
dsa_signature: $DSA_SIGNATURE
date: $(date -R)
release_notes: |
  $RELEASE_NOTES_HTML"

appcast_top=$(head -3 appcast.xml)
appcast_remaining=$(tail -n+4 appcast.xml)

echo "${appcast_top}
$(echo "$DATA" | mustache - appcast_item.mustache)
${appcast_remaining}" > new.xml

mv -v new.xml appcast.xml

bin/make_index $VERSION

notify "All set" "Committing and pushing appcast.xml"

git add .
git commit -m "$VERSION"
git push -u origin head
git tag $VERSION
git push --tags

notify "Appcast updated" "$VERSION"
